version: "3.9"
services:
  postgres:
    image: postgres:16
    environment:
      POSTGRES_USER: 
      POSTGRES_PASSWORD: 
      POSTGRES_DB: 
    ports: ["5432:5432"]
    volumes: [ "pgdata:/var/lib/postgresql/data" ]
  redis:
    image: redis:7
    ports: ["6379:6379"]
  zookeeper:
    image: bitnami/zookeeper:3.9
    environment:
      ALLOW_ANONYMOUS_LOGIN: "yes"
  kafka:
    image: bitnami/kafka:3.7
    environment:
      KAFKA_CFG_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_CFG_LISTENERS: PLAINTEXT://:9092
      KAFKA_CFG_ADVERTISED_LISTENERS: PLAINTEXT://kafka:9092
      ALLOW_PLAINTEXT_LISTENER: "yes"
    depends_on: [zookeeper]
    ports: ["9092:9092"]
  minio:
    image: minio/minio:latest
    command: server /data --console-address ":9001"
    environment:
      MINIO_ROOT_USER: 
      MINIO_ROOT_PASSWORD: 
    ports: ["9000:9000","9001:9001"]
    volumes: [ "miniodata:/data" ]

  api:
    build:
      context: ../..
      dockerfile: infra/docker/api.Dockerfile
    env_file: ../../.env
    command: uvicorn api.main:app --host 0.0.0.0 --port  --reload
    volumes:
      - ../..:/app
    ports: ["8000:8000"]
    depends_on: [postgres, redis, kafka, minio]

  worker:
    build:
      context: ../..
    dockerfile: infra/docker/worker.Dockerfile
    env_file: ../../.env
    command: python -m api.services.orchestrator
    volumes:
      - ../..:/app
    depends_on: [postgres, redis, kafka, minio, api]

  ui:
    build:
      context: ../../ui
      dockerfile: ../infra/docker/ui.Dockerfile
    environment:
      VITE_API_BASE: http://localhost:8000
    ports: ["3000:3000"]
    volumes:
      - ../../ui:/app
    command: ["npm","run","dev","--","--host","0.0.0.0"]

volumes:
  pgdata:
  miniodata:
